//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/Input/InputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @InputActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @InputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""InputActions"",
    ""maps"": [
        {
            ""name"": ""Game"",
            ""id"": ""d25bc06d-4227-45a4-87cb-2e59ad5ec5a1"",
            ""actions"": [
                {
                    ""name"": ""MovePrimary"",
                    ""type"": ""Value"",
                    ""id"": ""187a657a-0ab3-4b4c-a3a5-0be5590c62a3"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MoveSecondary"",
                    ""type"": ""Value"",
                    ""id"": ""23530fc0-cca8-4493-bdaf-cfc06d41386e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ResetPrimary"",
                    ""type"": ""Button"",
                    ""id"": ""88d76c7c-90d4-454b-baf7-4322e58794a2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""ResetSecondary"",
                    ""type"": ""Button"",
                    ""id"": ""5b137d6d-25e7-4cab-90f7-fbebfd76c359"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""994dd969-7ebf-4ac9-9169-bcba507ff3b5"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePrimary"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""17a6d87e-d24b-4169-95db-45c5219bdb6a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2d3d239b-c213-4345-9540-a35a4d30452f"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""a7244e9a-2842-46c0-aa61-70fd6283e680"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""9d3669fe-02f9-4aa3-9292-4076039c8508"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MovePrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""fb683f6d-9ed3-4bd4-ae4b-8d7f4943b14b"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSecondary"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""da98651f-98be-4525-9492-7cc42b2b41e8"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c47ff425-20a8-425b-8b5a-c6e04639d6fe"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""82c8dd86-a703-46db-85e3-f1bf33558059"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e4ad6cd6-70e9-4dfa-b076-0a2caa3a6fdc"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c0503a9c-d754-4c0c-96da-c645bc085a9c"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetPrimary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fedb96f2-2f46-4a21-929b-c7a6c2915beb"",
                    ""path"": ""<Keyboard>/rightCtrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ResetSecondary"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Game
        m_Game = asset.FindActionMap("Game", throwIfNotFound: true);
        m_Game_MovePrimary = m_Game.FindAction("MovePrimary", throwIfNotFound: true);
        m_Game_MoveSecondary = m_Game.FindAction("MoveSecondary", throwIfNotFound: true);
        m_Game_ResetPrimary = m_Game.FindAction("ResetPrimary", throwIfNotFound: true);
        m_Game_ResetSecondary = m_Game.FindAction("ResetSecondary", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Game
    private readonly InputActionMap m_Game;
    private IGameActions m_GameActionsCallbackInterface;
    private readonly InputAction m_Game_MovePrimary;
    private readonly InputAction m_Game_MoveSecondary;
    private readonly InputAction m_Game_ResetPrimary;
    private readonly InputAction m_Game_ResetSecondary;
    public struct GameActions
    {
        private @InputActions m_Wrapper;
        public GameActions(@InputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @MovePrimary => m_Wrapper.m_Game_MovePrimary;
        public InputAction @MoveSecondary => m_Wrapper.m_Game_MoveSecondary;
        public InputAction @ResetPrimary => m_Wrapper.m_Game_ResetPrimary;
        public InputAction @ResetSecondary => m_Wrapper.m_Game_ResetSecondary;
        public InputActionMap Get() { return m_Wrapper.m_Game; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameActions set) { return set.Get(); }
        public void SetCallbacks(IGameActions instance)
        {
            if (m_Wrapper.m_GameActionsCallbackInterface != null)
            {
                @MovePrimary.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePrimary;
                @MovePrimary.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePrimary;
                @MovePrimary.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMovePrimary;
                @MoveSecondary.started -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveSecondary;
                @MoveSecondary.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveSecondary;
                @MoveSecondary.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnMoveSecondary;
                @ResetPrimary.started -= m_Wrapper.m_GameActionsCallbackInterface.OnResetPrimary;
                @ResetPrimary.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnResetPrimary;
                @ResetPrimary.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnResetPrimary;
                @ResetSecondary.started -= m_Wrapper.m_GameActionsCallbackInterface.OnResetSecondary;
                @ResetSecondary.performed -= m_Wrapper.m_GameActionsCallbackInterface.OnResetSecondary;
                @ResetSecondary.canceled -= m_Wrapper.m_GameActionsCallbackInterface.OnResetSecondary;
            }
            m_Wrapper.m_GameActionsCallbackInterface = instance;
            if (instance != null)
            {
                @MovePrimary.started += instance.OnMovePrimary;
                @MovePrimary.performed += instance.OnMovePrimary;
                @MovePrimary.canceled += instance.OnMovePrimary;
                @MoveSecondary.started += instance.OnMoveSecondary;
                @MoveSecondary.performed += instance.OnMoveSecondary;
                @MoveSecondary.canceled += instance.OnMoveSecondary;
                @ResetPrimary.started += instance.OnResetPrimary;
                @ResetPrimary.performed += instance.OnResetPrimary;
                @ResetPrimary.canceled += instance.OnResetPrimary;
                @ResetSecondary.started += instance.OnResetSecondary;
                @ResetSecondary.performed += instance.OnResetSecondary;
                @ResetSecondary.canceled += instance.OnResetSecondary;
            }
        }
    }
    public GameActions @Game => new GameActions(this);
    public interface IGameActions
    {
        void OnMovePrimary(InputAction.CallbackContext context);
        void OnMoveSecondary(InputAction.CallbackContext context);
        void OnResetPrimary(InputAction.CallbackContext context);
        void OnResetSecondary(InputAction.CallbackContext context);
    }
}
